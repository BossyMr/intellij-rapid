editor.notification.no.robot=A robot is not connected to run this module and provide advanced code assistance.
filetype.rapid.description=Rapid
robot.connect.host.label=Host:
settings.rapid.color.scheme.title=Rapid
settings.rapid.attribute.descriptor.keyword=Keyword
settings.rapid.attribute.descriptor.number=Number
settings.rapid.attribute.descriptor.comment=Comment
settings.rapid.attribute.descriptor.operator.sign=Braces and Operators//Operator sign
settings.rapid.attribute.descriptor.parentheses=Braces and Operators//Parentheses
settings.rapid.attribute.descriptor.braces=Braces and Operators//Braces
settings.rapid.attribute.descriptor.brackets=Braces and Operators//Brackets
settings.rapid.attribute.descriptor.comma=Braces and Operators//Comma
settings.rapid.attribute.descriptor.semicolon=Braces and Operators//Semicolon
settings.rapid.attribute.descriptor.dot=Braces and Operators//Dot
settings.rapid.attribute.descriptor.line=Braces and Operators//Line
settings.rapid.attribute.descriptor.string=String//String text
settings.rapid.attribute.descriptor.valid.escape.sequence=String//Escape sequence//Valid
settings.rapid.attribute.descriptor.invalid.escape.sequence=String//Escape sequence//Invalid
settings.rapid.attribute.descriptor.module=Modules//Module
settings.rapid.attribute.descriptor.system.module=Modules//System module
settings.rapid.attribute.descriptor.procedure=Routines//Procedure
settings.rapid.attribute.descriptor.function=Routines//Function
settings.rapid.attribute.descriptor.trap=Routines//Trap
settings.rapid.attribute.descriptor.public=Visibility//Public
settings.rapid.attribute.descriptor.local=Visibility//Local
settings.rapid.attribute.descriptor.atomic=Structures//Atomic
settings.rapid.attribute.descriptor.alias=Structures//Alias
settings.rapid.attribute.descriptor.record=Structures//Record
settings.rapid.attribute.descriptor.component=Structures//Component
settings.rapid.attribute.descriptor.variable=Fields//Variable
settings.rapid.attribute.descriptor.persistent=Fields//Persistent
settings.rapid.attribute.descriptor.constant=Fields//Constant
settings.rapid.attribute.descriptor.task.variable=Fields//Task variable
settings.rapid.attribute.descriptor.task.persistent=Fields//Task persistent
settings.rapid.attribute.descriptor.local.variable=Variables//Local variable
settings.rapid.attribute.descriptor.reassigned.local.variable=Variables//Reassigned local variable
settings.rapid.attribute.descriptor.function.call=Routines//Function call
settings.rapid.attribute.descriptor.procedure.call=Routines//Procedure call
settings.rapid.attribute.descriptor.trap.call=Routines//Trap call
settings.rapid.attribute.descriptor.parameter=Parameters//Parameter
settings.rapid.attribute.descriptor.optional.parameter=Parameters//Optional parameter
settings.rapid.attribute.descriptor.reassigned.parameter=Parameters//Reassigned parameter
annotation.declaration.duplicate.symbol=Symbol ''{0}'' is already defined
annotation.reference.cannot.resolve.symbol=Cannot resolve symbol ''{0}''
annotation.identifier.length=Identifier is too long
annotation.string.length=String is too long
annotation.literal.numerical.size=Integer is too large
# {0} - left raw type, {1} - right raw type, {2} - greyed title color
annotation.tooltip.incompatible.types=\
  <html><body><table>\
  <tr><td style=''padding: 0px 16px 8px 4px;color: {2}''>Required type:</td><td style=''padding: 0px 4px 8px 0px;''>{0}</td></tr>\
  <tr><td style=''padding: 0px 16px 0px 4px;color: {2}''>Provided:</td><td style=''padding: 0px 4px 0px 0px;''>{1}</td></tr>\
  </table></body></html>
annotation.description.incompatible.types=Incompatible types. Found: ''{1}'', required: ''{0}''
robot.connect.dialog.title=New Robot
robot.connect.authentication.type.password=Username and Password
robot.connect.authentication.type.default=Default
robot.connect.host.port=Port:
robot.connect.authentication.type=Authentication:
robot.connect.authentication.username=Username:
robot.connect.authentication.password=Password:
notification.group.robot.connect.error=Robot connection failed
robot.tool.window.no.content=No robot connected.
robot.tool.window.no.content.action=Connect...
robot.tool.window.symbol.atomic=Atomics
robot.tool.window.symbol.record=Records
robot.tool.window.symbol.alias=Aliases
robot.tool.window.symbol.field=Fields
robot.tool.window.symbol.routine=Routines
robot.connect.progress.indicator.title=Connecting to {0}
annotation.alias.type.alias=Alias cannot be of alias
annotation.expression.not.constant=Constant expression required
annotation.expression.not.literal=Literal expression required
annotation.return.missing=Missing return type
annotation.return.invalid=Cannot return a value from a {0}
annotation.connect.target.invalid=Connect target must be a module variable
annotation.connect.target.not.variable=Connect target ''{0}'' must be a variable
annotation.connect.target.not.module=Connect target ''{0}'' must be a module variable
annotation.connect.target.wrong.parameter=Connect target ''{0}'' must be declared as VAR or INOUT
element.type.file=file
element.type.alias=alias
element.type.function=function
element.type.trap=trap
element.type.procedure=procedure
element.type.persistent=persistent
element.type.constant=constant
element.type.variable=variable
element.type.label=label
element.type.parameter=parameter
element.type.atomic=atomic
element.type.module=module
element.node.component.of.record={0} of {1}
annotation.module.name=Module ''{0}'' should be declared in a file named ''{0}.mod''
quick.fix.text.move.module.to.separate.file=Move module ''{0}'' to ''{0}.mod''
quick.fix.family.move.module.to.separate.file=Move module to separate file
error.cannot.rename.file=Cannot Rename File
quick.fix.family.rename.element=Rename symbol
quick.fix.text.rename.element=Rename ''{0}'' to ''{1}''
quick.fix.family.navigate.to.already.declared.symbol=Navigate to symbol declaration
quick.fix.text.navigate.to.already.declared.symbol=Navigate to previous declared symbol ''{0}''
annotation.module.attribute.order=Incorrect attribute order
quick.fix.family.reorder.module.attributes=Reorder module attributes
quick.fix.text.reorder.module.attributes=Reorder module attributes
inspection.message.unused.declaration=Symbol ''{0}'' is never used
quick.fix.name.safe.delete.symbol=Safe delete ''{0}''
quick.fix.family.safe.delete.symbol=Safe delete
inspection.name.unused.declaration=Unused declaration
inspection.group.declaration.redundancy=Declaration redundancy

annotation.module.attribute.duplicate=Duplicate module attribute
quick.fix.text.remove.module.attribute=Remove attribute ''{0}''
quick.fix.family.remove.module.attribute=Remove attribute
annotation.module.attribute.mutually.exclusive=Attribute ''{0}'' is mutually exclusive with ''{1}''
annotation.reference.not.type=''{0}'' is not a type
annotation.reference.not.procedure=''{0}'' is not a procedure
annotation.reference.not.function=''{0}'' is not a function
annotation.reference.not.trap=''{0}'' is not a trap
annotation.reference.not.parameter=''{0}'' is not a parameter
annotation.expression.not.trap=Trap expected
annotation.reference.not.variable=''{0}'' is not a variable
annotation.constant.not.initialized=Constant ''{0}'' is not initialized
annotation.persistent.not.initialized=Persistent ''{0}'' is not initialized
quick.fix.text.change.visibility=Make ''{0}'' {0}
visibility.local=local
visibility.task=task
visibility.global=global
quick.fix.family.change.visibility=Change visibility
annotation.array.too.many.dimensions=Array has too many dimensions
annotation.aggregate.unable.to.calculate.type=Unable to determine aggregate type
annotation.aggregate.number.of.components=Record ''{0}'' has {1} components
annotation.aggregate.invalid.type=Type ''{0}'' cannot be represented as an aggregate
annotation.routine.call.number.of.components=Routine ''{0}'' has {1} required parameters
space.array.initializer=Aggregate
space.empty.array.initializer=Empty aggregate
space.around.assignment.operators=Assignment operators (:=)
space.around.logical.operators=Logical operators (AND, OR)
space.around.equality.operators=Equality operators (=)
space.around.relational.operators=Relational operators (<, >, <=, >=, <>)
space.around.bitwise.operators=Bitwise operators (XOR)
space.around.additive.operators=Additive operators (+, -)
space.around.multiplicative.operators=Multiplicative operators (*, /)
space.around.unary.operators=Unary operators (-, +)
do.not.indent.module.symbols=Do not indent top level module members
blank.lines.around.structure=Around structure:
blank.lines.before.record.end=Before record end:
annotation.variable.read.only=Variable ''{0}'' is read only
annotation.raise.inside.error.clause=Cannot raise with error number inside error handler
annotation.raise.outside.error.clause=Cannot raise without error number outside error handler
annotation.retry.outside.error.handler=Cannot retry outside error handler
annotation.trynext.outside.error.handler=Cannot try next outside error handler
annotation.field.top.of.statement.list=Field ''{0}'' must be declared at the beginning of ''{1}''
annotation.wrong.arrangement=Incorrect arrangement
annotation.parameter.group.mutually.exclusive=Required parameters cannot be mutually exclusive
quick.fix.text.make.optional=Make optional
quick.fix.family.make.optional=Make optional
annotation.parameter.optional=Parameter ''{0}'' is optional
annotation.parameter.required=Parameter ''{0}'' is required
annotation.optional.parameter.not.switch=Parameter ''{0}'' is not a switch
annotation.expression.not.variable=Variable expected
annotation.variable.constant=Variable ''{0}'' is a constant
annotation.parameter.persistent=Parameter ''{0}'' is persistent
annotation.parameter.input=Parameter ''{0}'' is input
annotation.parameter.variable=Parameter ''{0}'' is variable
annotation.parameter.order=Incorrect parameter order
annotation.parameter.exclusive=''{0}'' and ''{1}'' are mutually exclusive
annotation.expression.binary.not.applicable=Operator ''{0}'' cannot be applied to ''{1}'', ''{2}''
annotation.expression.unary.not.applicable=Operator ''{0}'' cannot be applied to ''{1}''
arrangement.settings.groups.dependent.methods=Keep dependent methods together
arrangement.settings.text.modifier.global=global
arrangement.settings.text.modifier.global.inverted=not global
arrangement.settings.text.modifier.task=task
arrangement.settings.text.modifier.local=local
arrangement.settings.text.modifier.task.inverted=not task
arrangement.settings.text.modifier.local.inverted=not local
arrangement.settings.text.entry.type.alias=alias
arrangement.settings.text.entry.type.alias.inverted=not alias
arrangement.settings.text.entry.type.record=record
arrangement.settings.text.entry.type.record.inverted=not record
arrangement.settings.text.entry.type.variable=variable
arrangement.settings.text.entry.type.variable.inverted=not variable
arrangement.settings.text.entry.type.persistent=persistent
arrangement.settings.text.entry.type.persistent.inverted=not persistent
arrangement.settings.text.entry.type.constant=constant
arrangement.settings.text.entry.type.constant.inverted=not constant
arrangement.settings.text.entry.type.function=function
arrangement.settings.text.entry.type.function.inverted=not function
arrangement.settings.text.entry.type.procedure=procedure
arrangement.settings.text.entry.type.procedure.inverted=not procedure
arrangement.settings.text.entry.type.trap=trap
arrangement.settings.text.entry.type.trap.inverted=not trap
blank.lines.around.routine=Around method:
blank.lines.around.field=Around field:
blank.lines.around.component=Around component:
space.before.attribute.list=Attribute list
checkbox.indent.top.level=Do not indent top level module members
indent.handler.statement.list=Indent clause
formatting.group.wrapping.routine=Method declaration
formatting.wrapping.aggregate.after=New line after '['
formatting.wrapping.aggregate.before=Place ']' on new line
formatting.group.wrapping.aggregate=Aggregate expression
formatting.wrapping.attribute.list=Attribute list
formatting.wrapping.multiline.attribute.list=Align when multiline
formatting.group.wrapping.attribute.list=Attribute list
formatting.group.wrapping.test.statement='test' statement
formatting.wrapping.indent.case.from.test.statement=Indent 'case' branches
annotation.expression.not.array=Array required
run.configuration.type.display.name=Rapid
run.configuration.panel.module=Module:
run.configuration.panel.no.module=<no module>
action.create.new.file.text=Rapid Module
action.create.new.file.description=Create new Rapid module
action.create.new.file.module=Module
action.create.new.file.validator=This is not a valid Rapid identifier
### Error Reporting
error.report.author=Report to Author
error.report.background.task.name=Submitting error report
error.report.submitted.title=Report submitted
error.report.submitted.content=Thank you for your feedback!
error.report.failed.title=Report Sending Failed
error.report.failed.content=Report sending failed. Do you want to try again?
error.report.privacy.notice=I agree to my IDE version, OS name and version, plugin version, and the error details \
  shown above being used to improve the plugin. Check the above details to make sure it does not contain any sensitive \
  information.
debug.breakpoint.type.name=Rapid Line Breakpoints
run.configuration.panel.task.name=Name
run.configuration.panel.task.module=Upload Module
robot.upload.action=Upload...
run.execution.start=Starting...
robot.download.action=Download...
robot.delete.action=Delete
robot.refresh.action=Refresh...
notification.title.robot.mastership.error=Could not to acquire mastership of type ''{0}''; mastership is already held by ''{1}''
notification.content.robot.mastership.error=Check that the robot is in automatic mode and that another program isn't currently controlling it.
run.execution.robot.not.connected=Robot ''{0}'' is not connected
run.execution.exception=Could not start program
symbol.search.target.usage.handler=Usages of ''{0}''
element.type.component=component
notification.action.retry.connect=Reconnect...
notification.subtitle.robot.connect.error=Robot connection failed
notification.title.robot.connect.error=Failed to connect to robot: {0}
inspection.message.constant.expression=Value of expression is always {0}
inspection.name.constant.expression=Constant values
inspection.name.unreachable.statement=Unreachable code
inspection.name.probable.bugs=Probable bugs
inspection.message.missing.variable=Variable ''{0}'' is always missing
inspection.message.unknown.variable=Variable ''{0}'' might be missing
data.flow.save.graph=Save Data Flow Diagram
data.flow.save.graph.task=Saving data flow diagram
notification.group.data.flow.export=Save data flow diagram
notification.group.data.flow.export.error=Data flow diagram could not be created
notification.group.data.flow.export.success=Data flow diagram generated
data.flow.save.graph.failure=Data flow diagram could not be created
inspection.message.unreachable.statement=Unreachable code
quick.fix.text.delete.unreachable.code=Remove unreachable code
inspection.message.out.of.bounds=Array index is out of bounds
quick.fix.text.rename.symbol=Rename symbol
quick.fix.family.symbol.arrangement=Rearrange symbols
annotation.expression.not.label=Label required
annotation.return.value.missing=Missing return vaue
quick.fix.family.remove.return.value=Remove return value
quick.fix.family.change.routine.type=Change routine type
quick.fix.text.change.routine.type=Make ''{0}'' a ''{1}''
quick.fix.family.change.return.type=Change return type
quick.fix.text.change.return.type=Make ''{0}'' return ''{1}''
annotation.raise.value.invalid=Cannot raise new error in error handler
quick.fix.family.remove.raise.value=Remove raise value
annotation.raise.value.missing=Missing error number
annotation.statement.outside.error.handler=Statement cannot appear outside error handler
annotation.array.type.expected=Array type expected; found: ''{0}''
annotation.expression.not.routine.of.type=Expected {0}
annotation.label.different.statement.list=Cannot transfer control into a different statement list
quick.fix.text.change.variable.type=Change variable ''{0}'' type to ''{1}''
annotation.test.case.statement.after.default=Case statement must be placed before default statement
unwrap.if=Unwrap 'if...'
quick.fix.unwrap.if.statement=Unwrap 'if' statement
quick.fix.family.remove.if.statement=Remove 'if' statement
inspection.name.data.flow.problems=Data flow problems
inspection.option.report.possible.problem=Report problems that only happen in some code paths
inspection.message.maybe.out.of.bounds=Array index might be out of bounds
surrounder.with.if=If
quick.fix.text.surround.with.if.statement=Surround with ''if ({0})''
quick.fix.family.surround.with.if.statement=Surround with if
annotation.array.wrong.degree=Variable ''{0}'' only has ''{1}'' dimensions
annotation.array.length=Array ''{0}'' has {1} elements
annotation.routine.parameter.not.found=Parameter ''{0}'' not found
annotation.missing.parameter.list=Missing parameter list
annotation.unexpected.parameter.list=Parameter list unexpected
annotation.return.type.unexpected=Return type unexpected
annotation.missing.return.type=Missing return type
documentation.download.name=Documentation
documentation.message.title=Download external documentation
documentation.message.text=External documentation provides documentation for builtin symbols
documentation.task.title=Downloading documentation
documentation.error.title=Could not download documentation
documentation.extract.zip=Extracting documentation
documentation.extract.alias=Extracting aliases
notification.group.documentation=Documentation download
documentation.settings.name=Rapid External Documentation
documentation.download.state=Download external documentation:
documentation.language.state=Preferred language:
documentation.settings.download.always=Always download
documentation.settings.download.ask=Ask before downloading
documentation.settings.download.never=Never download
documentation.message.action.always=Always download
documentation.message.action.once=Download
documentation.message.action.never=Never download
documentation.extract.image=Indexing images
documentation.action.retry=Retry
documentation.download.success=External documentation was downloaded in {0} seconds, {1} ms ({2})
robot.connect.dialog.robot=Robot:
robot.connect.dialog.manual=Add Robot
robot.connect.dialog.separator=Detected Robots
robot.connect.host.invalid=Host is invalid
inlay.parameter.provider.name=Parameter Hints
inlay.usages.text={0,choice, 0#no usages|1#1 usage|2#{0,number} usages}
surrounder.with.for=For
surrounder.with.if.else=If / Else
surrounder.with.while=While
unwrap.for=Unwrap 'for...'
unwrap.while=Unwrap 'while...'
robot.connect.host.empty=Host is empty
run.configuration.fragment.connect=Robot
run.configuration.panel.task.enable=Enable
run.configuration.fragment.task.invalid=Could not connect to ''{0}''
run.configuration.fragment.task.no.selection=No robot selected
run.configuration.fragment.task.empty=No tasks found
run.configuration.fragment.task.validation.empty=No tasks found
run.configuration.fragment.task.validation.not.enabled=No tasks enabled
run.configuration.fragment.task=Tasks
run.configuration.fragment.task.validation.wrong.host=No tasks found
run.configuration.fragment.robot=Robot
run.configuration.fragment.task.connecting=Connecting to ''{0}''
run.execution.robot.could.not.connect=Could not connect to ''{0}''
robot.connect.authentication.remember=Remember
run.configuration.producer.select.task=Tasks of {0}
robot.tool.window.title=Robot
robot.tool.window.tab.log=Log
robot.tool.window.tab.log.empty.text=Log is empty